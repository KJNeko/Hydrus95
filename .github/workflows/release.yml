name: Release
on:
  push:
    tags:
      - 'v*'

jobs:
  build-windows:
    runs-on: windows-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Setup mingw
        uses: egor-tensin/setup-mingw@v2
        with:
          platform: x64

      - name: Cache sqlite
        id: cache-sqlite
        uses: actions/cache@v3
        with:
          path: '${{github.workspace}}\sqlite'
          key: ${{runner.os}}-sqlite-3400100

      - name: Download SQLITE-Amalgamation
        if: steps.cache-sqlite.outputs.cache-hit != 'true'
        uses: carlosperate/download-file-action@v2.0.0
        id: download_amalgamation
        with:
          file-url: https://www.sqlite.org/2022/sqlite-amalgamation-3400100.zip
          file-name: sqlite-amalg.zip
          location: '${{github.workspace}}\sqlite'

      - name: Download SQLITE-dll
        if: steps.cache-sqlite.outputs.cache-hit != 'true'
        uses: carlosperate/download-file-action@v2.0.0
        id: download_dll
        with:
          file-url: https://www.sqlite.org/2022/sqlite-dll-win64-x64-3400100.zip
          file-name: sqlite-dll.zip
          location: '${{github.workspace}}\sqlite'

      - name: Prepare SQLITE
        if: steps.cache-sqlite.outputs.cache-hit != 'true'
        run: |
          cd sqlite
          7z x sqlite-amalg.zip -o"./include"
          cd include/sqlite-amalgamation-3400100
          move * ..
          cd ../..
          7z x sqlite-dll.zip -o"./lib"
          cd ..

      - name: Install Qt
        if: steps.cache-qt.outputs.cache-hit != 'true'
        uses: jurplel/install-qt-action@v3
        with:
          version: 6.4.*
          host: 'windows'
          target: 'desktop'
          arch: 'win64_mingw'
          cache: true

      - name: CMake
        run: |
          cmake -S . -B build-r -DCMAKE_BUILD_TYPE=Release -G"MinGW Makefiles" -DSQL_PATH='${{github.workspace}}\sqlite'
          cmake -S . -B build-d -DCMAKE_BUILD_TYPE=Debug -G"MinGW Makefiles" -DSQL_PATH='${{github.workspace}}\sqlite'

      - name: Build
        run: |
          cd build-r
          mingw32-make -j4
          cd ../build-d
          mingw32-make -j4

      - name: Package
        run: |
          mkdir Hydrus95-Release
          mkdir Hydrus95-Debug
          move .\build-r\bin\* .\Hydrus95-Release\
          move .\build-d\bin\* .\Hydrus95-Debug\
          7z.exe a -tzip -mm=Deflate -mx=5 .\Hydrus95-Windows.zip .\Hydrus95-Release
          7z.exe a -tzip -mm=Deflate -mx=5 .\Hydrus95-Windows-Debug.zip .\Hydrus95-Debug
          

      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v3
        with:
          name: Windows-Extract
          path: Hydrus95-Windows.zip
          if-no-files-found: error
          retention-days: 2

      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v3
        with:
          name: Windows-Extract-Debug
          path: Hydrus95-Windows-Debug.zip
          if-no-files-found: error
          retention-days: 2

  create-release:
    name: Release
    runs-on: ubuntu-20.04
    needs: build-windows
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get artifacts
        uses: actions/download-artifact@v3

      - name: Extract version
        id: meta
        run: |
          echo "version=${GITHUB_REF##*/}" >> $GITHUB_ENV
          echo "version_short=${GITHUB_REF##*/v}" >> $GITHUB_ENV

      - name: Rename
        run: |
          mkdir windows
          mv Windows-Extract/Hydrus95-Windows.zip Hydrus95-${{ env.version_short }}-windows.zip
          mv Windows-Extract/Hydrus95-Windows-Debug.zip Hydrus95-${{ env.version_short }}-Debug-windows.zip

      - name: Upload
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            Hydrus95-${{env.version_short}}-windows.zip
            Hydrus95-${{env.version_short}}-Debug-windows.zip
          

